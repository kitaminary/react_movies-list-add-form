{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","onAdd","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","titleError","setTitleError","descriptionError","setDescriptionError","urlImgError","setUrlImgError","urlError","setUrlError","imdbIdError","setImdbIdError","disableButton","setDisabledButton","validUrl","movieObj","useEffect","length","onSubmit","event","preventDefault","test","type","value","placeholder","onChange","target","classNames","validateImageUrl","validateUrl","App","moviesFromServer","setMovies","newMovie","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cebd731e.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>Link to movie</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","/* eslint-disable max-len */\nimport classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [descriptionError, setDescriptionError] = useState(false);\n  const [urlImgError, setUrlImgError] = useState(false);\n  const [urlError, setUrlError] = useState(false);\n  const [imdbIdError, setImdbIdError] = useState(false);\n  const [disableButton, setDisabledButton] = useState(true);\n  // eslint-disable-next-line max-len\n  const validUrl = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n  const movieObj: Movie = {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  };\n\n  useEffect(() => {\n    if (\n      imdbUrl\n      && imgUrl\n      && title.length > 0\n      && description\n      && imdbId\n    ) {\n      setDisabledButton(false);\n    } else {\n      setDisabledButton(true);\n    }\n  }, [imdbUrl, imgUrl, title, description, imdbId]);\n\n  const validateImageUrl = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!validUrl.test(event.target.value)) {\n      setUrlImgError(true);\n    } else {\n      setUrlImgError(false);\n    }\n  };\n\n  const validateUrl = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!validUrl.test(event.target.value)) {\n      setUrlError(true);\n    } else {\n      setUrlError(false);\n    }\n  };\n\n  const hendlerSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (\n      validUrl.test(imdbUrl)\n      && validUrl.test(imgUrl)\n      && !titleError\n      && !descriptionError\n      && !imdbIdError\n    ) {\n      onAdd(movieObj);\n      setTitle('');\n      setDescription('');\n      setImdbId('');\n      setImgUrl('');\n      setImdbUrl('');\n      setUrlError(false);\n      setUrlImgError(false);\n    }\n  };\n\n  return (\n    <div className=\"sidebar\">\n      <h1 className=\"sidebar__title title is-4\">Add new movie</h1>\n      <form onSubmit={hendlerSubmit} className=\"sidebar__form\">\n        <input\n          type=\"text\"\n          className=\"sidebar__input-title input my-3\"\n          value={title}\n          placeholder=\"Enter the title\"\n          onChange={(event) => {\n            setTitleError(false);\n            setTitle(event.target.value);\n          }}\n        />\n        <input\n          type=\"text\"\n          className=\"sidebar__input-title input my-3\"\n          value={description}\n          placeholder=\"Enter the description\"\n          onChange={(event) => {\n            setDescriptionError(false);\n            setDescription(event.target.value);\n          }}\n        />\n        <input\n          type=\"text\"\n          className={classNames(\n            'sidebar__input-imgUrl input my-3',\n            {\n              'is-danger': urlImgError === true,\n            },\n          )}\n          value={imgUrl}\n          placeholder=\"Enter an basic image link\"\n          onChange={(event) => {\n            setImgUrl(event.target.value);\n            validateImageUrl(event);\n          }}\n        />\n        {urlImgError && (\n          <span className=\"has-text-danger\">Incorrect url</span>\n        )}\n        <input\n          type=\"text\"\n          className={classNames(\n            'sidebar__input-imgUrl input my-3',\n            {\n              'is-danger': urlError === true,\n            },\n          )}\n          value={imdbUrl}\n          placeholder=\"Enter an link to IMDb movie\"\n          onChange={(event) => {\n            setImdbUrl(event.target.value);\n            validateUrl(event);\n          }}\n        />\n        {urlError && (\n          <span className=\"has-text-danger\">Incorrect url</span>\n        )}\n        <input\n          type=\"text\"\n          className=\"sidebar__input-title input my-3\"\n          value={imdbId}\n          placeholder=\"Enter an resurs IMDb id\"\n          onChange={(event) => {\n            setImdbIdError(false);\n            setImdbId(event.target.value);\n          }}\n        />\n\n        <div className=\"sidebar__button-box\">\n          <button\n            className={classNames(\n              'sidebar__button button is-success',\n              {\n                'is-static': disableButton,\n              },\n            )}\n            type=\"submit\"\n          >\n            Add movie\n          </button>\n        </div>\n      </form>\n\n      <div className=\"sidebar__text-box mt-6\">\n        <p className=\"sidebar__test-title\">\n          Test title:\n          {' '}\n          <b>The Batman</b>\n        </p>\n        <p className=\"sidebar__test-description\">\n          Test description:\n          {' '}\n          <b>\n            {`When a sadistic serial killer begins murdering key political\n          figures in Gotham, Batman is forced to investigate the city's\n          hidden corruption and question his family's involvement.`}\n          </b>\n        </p>\n        <p className=\"sidebar__test-imgUrl\">\n          Test Film Logo: (\n          <i>copy link</i>\n          )\n          {' '}\n          <a\n            href=\"https://cly.1cdn.vn/2022/03/19/whatsappimage2022-01-26at75550pm-16466344716182124443472.jpeg\"\n            className=\"is-ghost\"\n          >\n            <b>copy image link</b>\n          </a>\n        </p>\n        <p className=\"sidebar__test-imdbUrl\">\n          Test Movie Link: (\n          <i>copy link</i>\n          )\n          {' '}\n          <a\n            href=\"https://www.imdb.com/title/tt1877830/\"\n            className=\"is-ghost\"\n          >\n            <b>copy movie link</b>\n          </a>\n        </p>\n        <p className=\"sidebar__test-imdbId\">\n          Test imdbId:\n          {' '}\n          <b>tt1877830</b>\n        </p>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies((currentMovies) => [...currentMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}